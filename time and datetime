import time
import datetime

today = datetime.date.today()
print("Today:", today)
print("Year:", today.year)
print("Month:", today.month)
print("Day:", today.day)

timestamp = time.time()
print("Timestamp:", timestamp)

d = datetime.date.fromtimestamp(timestamp)
print("Date:", d)

d = datetime.date.fromisoformat('2019-11-04')
print(d)

d = datetime.date(1991, 2, 5)
print(d)

d = d.replace(year=1992, month=1, day=16)
print(d)

d = datetime.date(2019, 11, 4)
print(d.weekday())
print(d.isoweekday())

t = datetime.time(14, 53, 20, 1)
print("Time:", t)
print("Hour:", t.hour)
print("Minute:", t.minute)
print("Second:", t.second)
print("Microsecond:", t.microsecond)

timestamp = 1572879180
print(time.ctime(timestamp))
print(time.ctime())

timestamp = 1572879180
print(time.gmtime(timestamp))
print(time.localtime(timestamp))

# time.struct_time:
#     tm_year   # specifies the year
#     tm_mon    # specifies the month (value from 1 to 12)
#     tm_mday   # specifies the day of the month (value from 1 to 31)
#     tm_hour   # specifies the hour (value from 0 to 23)
#     tm_min    # specifies the minute (value from 0 to 59)
#     tm_sec    # specifies the second (value from 0 to 61 )
#     tm_wday   # specifies the weekday (value from 0 to 6)
#     tm_yday   # specifies the year day (value from 1 to 366)
#     tm_isdst  # specifies whether daylight saving time applies (1 – yes, 0 – no, -1 – it isn't known)
#     tm_zone   # specifies the timezone name (value in an abbreviated form)
#     tm_gmtoff # specifies the offset east of UTC (value in seconds)

timestamp = 1572879180
st = time.gmtime(timestamp)
print(time.asctime(st))
print(time.mktime((2019, 11, 4, 14, 53, 0, 0, 308, 0)))
# 2019 => tm_year
# 11 => tm_mon
# 4 => tm_mday
# 14 => tm_hour
# 53 => tm_min
# 0 => tm_sec
# 0 => tm_wday
# 308 => tm_yday
# 0 => tm_isdst

dt = datetime.datetime(2019, 11, 4, 14, 53)
print("Datetime:", dt)
print("Date:", dt.date())
print("Time:", dt.time())

print("today:", datetime.datetime.today())
print("now:", datetime.datetime.now())
print("utcnow:", datetime.datetime.utcnow())

dt = datetime.datetime(2020, 10, 4, 14, 55)
print("Timestamp:", dt.timestamp())

d = datetime.date(2020, 1, 4)
print(d.strftime('%Y/%m/%d'))

t = datetime.time(14, 53)
print(t.strftime("%H:%M:%S"))

dt = datetime.datetime(2020, 11, 4, 14, 53)
print(dt.strftime("%y/%B/%d %H:%M:%S"))

timestamp = 1572879180
st = time.gmtime(timestamp)

print(time.strftime("%Y/%m/%d %H:%M:%S", st))
print(time.strftime("%Y/%m/%d %H:%M:%S"))

print(datetime.datetime.strptime("2019/11/04 14:53:00", "%Y/%m/%d %H:%M:%S"))
print(time.strptime("2019/11/04 14:53:00", "%Y/%m/%d %H:%M:%S"))

d1 = datetime.date(2020, 11, 4)
d2 = datetime.date(2019, 11, 4)

print(d1 - d2)

dt1 = datetime.datetime(2020, 11, 4, 0, 0, 0)
dt2 = datetime.datetime(2019, 11, 4, 14, 53, 0)

print(dt1 - dt2)

delta = datetime.timedelta(weeks=2, days=2, hours=3)
print(delta)

delta = datetime.timedelta(weeks=2, days=2, hours=3)
print("Days:", delta.days)
print("Seconds:", delta.seconds)
print("Microseconds:", delta.microseconds)

delta = datetime.timedelta(weeks=2, days=2, hours=2)
print(delta)

delta2 = delta * 2
print(delta2)

d = datetime.date(2019, 10, 4) + delta2
print(d)

dt = datetime.datetime(2019, 10, 4, 14, 53) + delta2
print(dt)

class Student:
    def take_nap(self, seconds):
        print("I'm very tired. I have to take a nap. See you later.")
        time.sleep(seconds)
        print("I slept well! I feel great!")

student = Student()
student.take_nap(5)
